priority -45

snippet def "#define ..."
#define $1
endsnippet

snippet inc "#include ..."
#include "$1"
endsnippet

snippet incl "#include <...>"
#include <$1>
endsnippet

snippet ifndef "#ifndef ... #define ... #endif"
#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
#define $1
#endif
endsnippet

snippet pf "printf()"
printf("$1"$2);$0
endsnippet

snippet pfn "printf() with newline"
printf("$1\n"$2);$0
endsnippet

snippet todo "TODO comment" w
// TODO: $1 (${2:`git config user.name | awk '{print $1}' || echo $USER`} ~ `date +"%Y-%m-%d %H:%M"`)$0
endsnippet

snippet fixme "FIXME comment" w
// FIXME: $1 (${2:`git config user.name | awk '{print $1}' || echo $USER`} ~ `date +"%Y-%m-%d %H:%M"`)$0
endsnippet

snippet note "NOTE comment" w
// NOTE: $1 (${2:`git config user.name | awk '{print $1}' || echo $USER`} ~ `date +"%Y-%m-%d %H:%M"`)$0
endsnippet

snippet todo "HACK comment" w
// HACK: $1 (${2:`git config user.name | awk '{print $1}' || echo $USER`} ~ `date +"%Y-%m-%d %H:%M"`)$0
endsnippet

snippet fileh "file header comment" b
/*
File:             `!v expand('%:t')`
Author:           `git config user.name || echo $USER`
Created:          `date +%Y-%m-%d`
Description:      ${4:${VISUAL}}
*/
${0}
endsnippet

snippet fund "function definition" b
${1:void} ${2:function_name}($3);${0}
endsnippet

snippet fun "function" b
${1:void} ${2:function_name}($3)
{
	${VISUAL}$0
}
endsnippet

snippet mn "main() function"
int main(void)
{
	$0
	return 0;
}
endsnippet

snippet main "main() function with arguments"
int main(int argc, char *argv[])
{
	$0
	return 0;
}
endsnippet
